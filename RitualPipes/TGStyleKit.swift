//
//  TGStyleKit.swift
//  TheGrid
//
//  Created by Christophe Scholly on 08/07/2015.
//  Copyright (c) 2015 kicody. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

import UIKit

public class TGStyleKit : NSObject {

    //// Drawing Methods
    public class func drawTargetIcon(iconColor iconColor: UIColor, size: CGFloat) {

        //// Frames
        let frame = CGRectMake(0, 0, size, size)

        //// Subframes
        let group: CGRect = CGRectMake(frame.minX, frame.minY, frame.width, frame.height)


        //// Group
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(group.minX + 0.50000 * group.width, group.minY + 0.00000 * group.height))
        bezier2Path.addCurveToPoint(CGPointMake(group.minX + 0.00000 * group.width, group.minY + 0.50000 * group.height), controlPoint1: CGPointMake(group.minX + 0.22430 * group.width, group.minY + 0.00000 * group.height), controlPoint2: CGPointMake(group.minX + 0.00000 * group.width, group.minY + 0.22430 * group.height))
        bezier2Path.addCurveToPoint(CGPointMake(group.minX + 0.50000 * group.width, group.minY + 1.00000 * group.height), controlPoint1: CGPointMake(group.minX + 0.00000 * group.width, group.minY + 0.77570 * group.height), controlPoint2: CGPointMake(group.minX + 0.22430 * group.width, group.minY + 1.00000 * group.height))
        bezier2Path.addCurveToPoint(CGPointMake(group.minX + 1.00000 * group.width, group.minY + 0.50000 * group.height), controlPoint1: CGPointMake(group.minX + 0.77570 * group.width, group.minY + 1.00000 * group.height), controlPoint2: CGPointMake(group.minX + 1.00000 * group.width, group.minY + 0.77570 * group.height))
        bezier2Path.addCurveToPoint(CGPointMake(group.minX + 0.50000 * group.width, group.minY + 0.00000 * group.height), controlPoint1: CGPointMake(group.minX + 1.00000 * group.width, group.minY + 0.22430 * group.height), controlPoint2: CGPointMake(group.minX + 0.77570 * group.width, group.minY + 0.00000 * group.height))
        bezier2Path.closePath()
        bezier2Path.moveToPoint(CGPointMake(group.minX + 0.50000 * group.width, group.minY + 0.82000 * group.height))
        bezier2Path.addCurveToPoint(CGPointMake(group.minX + 0.18000 * group.width, group.minY + 0.50000 * group.height), controlPoint1: CGPointMake(group.minX + 0.32355 * group.width, group.minY + 0.82000 * group.height), controlPoint2: CGPointMake(group.minX + 0.18000 * group.width, group.minY + 0.67645 * group.height))
        bezier2Path.addCurveToPoint(CGPointMake(group.minX + 0.50000 * group.width, group.minY + 0.18000 * group.height), controlPoint1: CGPointMake(group.minX + 0.18000 * group.width, group.minY + 0.32355 * group.height), controlPoint2: CGPointMake(group.minX + 0.32355 * group.width, group.minY + 0.18000 * group.height))
        bezier2Path.addCurveToPoint(CGPointMake(group.minX + 0.82000 * group.width, group.minY + 0.50000 * group.height), controlPoint1: CGPointMake(group.minX + 0.67645 * group.width, group.minY + 0.18000 * group.height), controlPoint2: CGPointMake(group.minX + 0.82000 * group.width, group.minY + 0.32355 * group.height))
        bezier2Path.addCurveToPoint(CGPointMake(group.minX + 0.50000 * group.width, group.minY + 0.82000 * group.height), controlPoint1: CGPointMake(group.minX + 0.82000 * group.width, group.minY + 0.67645 * group.height), controlPoint2: CGPointMake(group.minX + 0.67645 * group.width, group.minY + 0.82000 * group.height))
        bezier2Path.closePath()
        bezier2Path.miterLimit = 4;

        iconColor.setFill()
        bezier2Path.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalInRect: CGRectMake(group.minX + floor(group.width * 0.37500) + 0.5, group.minY + floor(group.height * 0.37500) + 0.5, floor(group.width * 0.62500) - floor(group.width * 0.37500), floor(group.height * 0.62500) - floor(group.height * 0.37500)))
        iconColor.setFill()
        oval2Path.fill()
    }

    public class func drawSoundIcon(iconColor iconColor: UIColor, size: CGFloat) {

        //// Frames
        let frame = CGRectMake(0, 0, size, size)

        //// Subframes
        let group3: CGRect = CGRectMake(frame.minX + 0.1, frame.minY, frame.width - 0.1, frame.height)


        //// Group 3
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(group3.minX + 0.65488 * group3.width, group3.minY + 0.01128 * group3.height))
        bezierPath.addCurveToPoint(CGPointMake(group3.minX + 0.55122 * group3.width, group3.minY + 0.01812 * group3.height), controlPoint1: CGPointMake(group3.minX + 0.62175 * group3.width, group3.minY + -0.00594 * group3.height), controlPoint2: CGPointMake(group3.minX + 0.58180 * group3.width, group3.minY + -0.00329 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.21861 * group3.width, group3.minY + 0.25117 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.10010 * group3.width, group3.minY + 0.25117 * group3.height))
        bezierPath.addCurveToPoint(CGPointMake(group3.minX + 0.00000 * group3.width, group3.minY + 0.35117 * group3.height), controlPoint1: CGPointMake(group3.minX + 0.04481 * group3.width, group3.minY + 0.25117 * group3.height), controlPoint2: CGPointMake(group3.minX + 0.00000 * group3.width, group3.minY + 0.29594 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.00000 * group3.width, group3.minY + 0.64882 * group3.height))
        bezierPath.addCurveToPoint(CGPointMake(group3.minX + 0.10010 * group3.width, group3.minY + 0.74882 * group3.height), controlPoint1: CGPointMake(group3.minX + 0.00000 * group3.width, group3.minY + 0.70404 * group3.height), controlPoint2: CGPointMake(group3.minX + 0.04481 * group3.width, group3.minY + 0.74882 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.21861 * group3.width, group3.minY + 0.74882 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.55122 * group3.width, group3.minY + 0.98187 * group3.height))
        bezierPath.addCurveToPoint(CGPointMake(group3.minX + 0.60870 * group3.width, group3.minY + 1.00000 * group3.height), controlPoint1: CGPointMake(group3.minX + 0.56838 * group3.width, group3.minY + 0.99390 * group3.height), controlPoint2: CGPointMake(group3.minX + 0.58850 * group3.width, group3.minY + 1.00000 * group3.height))
        bezierPath.addCurveToPoint(CGPointMake(group3.minX + 0.65487 * group3.width, group3.minY + 0.98872 * group3.height), controlPoint1: CGPointMake(group3.minX + 0.62449 * group3.width, group3.minY + 1.00000 * group3.height), controlPoint2: CGPointMake(group3.minX + 0.64034 * group3.width, group3.minY + 0.99627 * group3.height))
        bezierPath.addCurveToPoint(CGPointMake(group3.minX + 0.70878 * group3.width, group3.minY + 0.90000 * group3.height), controlPoint1: CGPointMake(group3.minX + 0.68800 * group3.width, group3.minY + 0.97150 * group3.height), controlPoint2: CGPointMake(group3.minX + 0.70878 * group3.width, group3.minY + 0.93730 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.70878 * group3.width, group3.minY + 0.10000 * group3.height))
        bezierPath.addCurveToPoint(CGPointMake(group3.minX + 0.65488 * group3.width, group3.minY + 0.01128 * group3.height), controlPoint1: CGPointMake(group3.minX + 0.70878 * group3.width, group3.minY + 0.06270 * group3.height), controlPoint2: CGPointMake(group3.minX + 0.68800 * group3.width, group3.minY + 0.02850 * group3.height))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(group3.minX + 0.50859 * group3.width, group3.minY + 0.70773 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.30767 * group3.width, group3.minY + 0.56695 * group3.height))
        bezierPath.addCurveToPoint(CGPointMake(group3.minX + 0.25020 * group3.width, group3.minY + 0.54883 * group3.height), controlPoint1: CGPointMake(group3.minX + 0.29084 * group3.width, group3.minY + 0.55515 * group3.height), controlPoint2: CGPointMake(group3.minX + 0.27077 * group3.width, group3.minY + 0.54883 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.20018 * group3.width, group3.minY + 0.54883 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.20018 * group3.width, group3.minY + 0.45118 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.25020 * group3.width, group3.minY + 0.45118 * group3.height))
        bezierPath.addCurveToPoint(CGPointMake(group3.minX + 0.30767 * group3.width, group3.minY + 0.43306 * group3.height), controlPoint1: CGPointMake(group3.minX + 0.27077 * group3.width, group3.minY + 0.45118 * group3.height), controlPoint2: CGPointMake(group3.minX + 0.29084 * group3.width, group3.minY + 0.44485 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.50860 * group3.width, group3.minY + 0.29228 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.50860 * group3.width, group3.minY + 0.70773 * group3.height))
        bezierPath.addLineToPoint(CGPointMake(group3.minX + 0.50859 * group3.width, group3.minY + 0.70773 * group3.height))
        bezierPath.closePath()
        bezierPath.miterLimit = 4;

        iconColor.setFill()
        bezierPath.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(roundedRect: CGRectMake(group3.minX + floor(group3.width * 0.79981 - 0.41) + 0.91, group3.minY + floor(group3.height * 0.13850 - 0.35) + 0.85, floor(group3.width * 1.00000 - 0.41) - floor(group3.width * 0.79981 - 0.41), floor(group3.height * 0.86150 + 0.35) - floor(group3.height * 0.13850 - 0.35) - 0.7), cornerRadius: 10)
        iconColor.setFill()
        rectanglePath.fill()
    }
}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
